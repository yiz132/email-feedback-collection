const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys'); //.. means go up folder

const User = mongoose.model('users'); //User is a model class

passport.serializeUser((user, done) => {
    done(null, user.id); //auto generated by mongo but not google id, then we can extend to facebook login etc..
});

passport.deserializeUser((id, done) => {
    User.findById(id)
        .then(user => {
            done(null, user);
        });
});

passport.use(
    new GoogleStrategy({
        clientID: keys.googleClientID,
        clientSecret: keys.googleClientSecret,
        callbackURL: '/auth/google/callback',
        proxy: true
    },
        async (accessToken, refreshToken, profile, done) => {   //callback fuction
            const existingUser = await User.findOne({ googleId: profile.id });
            if (existingUser) {
                //already have a record with given id
                done(null, existingUser);
            }
            else {
                //make a new record
                const user = await new User({ googleId: profile.id }).save();
                done(null,user);
            }
        }
    )
);